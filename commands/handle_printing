#!/bin/sh
###
#
# Called by printmonitor to execute tasks during a print - should only be called when a print is active
#
###

duetdir=$(dirname "$(readlink -f "$0")")
source $duetdir/functions
ptemp=/tmp/$startdate.tmp
source $ptemp

writevars () {
	declare -p | grep duetm_ > $ptemp.$$
	mv $ptemp.$$ $ptemp
}

confcheck

debug=1

allstats=$(statusparser)
gstatus=$(echo $allstats | egrep 'Printing')
cstatus=$(echo $allstats | grep CSV)
status=$(echo $allstats | grep RAW)
htemp=$(echo $cstatus | awk -F',' '{print $3}')
ttemp=$(echo $cstatus | awk -F',' '{print $4}')
layer=$(echo $cstatus | awk -F',' '{print $5}')

startdate=$1							#This date is the printing_started time from printcontrol.
log=print.$startdate.log

if [ "$csv" ]; then
	csvlog=$startdate.csv
	if [ -f "$csvlog" ]
	then
		echo "Layer,Bed Temp,Bed Target,Head Temp,Head Target,Percent" > $csvlog
	fi
fi

status=${status#RAW-}
cstatus=${cstatus#CSV-}

if [ "$debug" = 1 ]
then
	echo head temp: $htemp
	echo target temp: $ttemp
	echo layer: $layer
	echo Raw status: $status
	echo CSV: $cstatus
fi

if [ ! "$duetm_loop" ]
then
	duetm_loop=1
	duetm_oldlayer=0
	writevars
else
	duetm_loop=$((duetm_loop+1))
	writevars
fi

if [ "$snapshot" = timed ]
then
	wget --quiet http://localhost/webcam/?action=snapshot -O $imgdir/$startdate-$duetm_loop.jpg
elif [ "$snapshot" = layer ]
then
	if [ "$layer" != "$oldlayer" ]
	then
		#pause print
		printcontrol pause
		sleep 2
		wget --quiet http://localhost/webcam/?action=snapshot -O $imgdir/$startdate-$duetm_loop.jpg
		printcontrol resume
		#resume print
		duetm_oldlayer=$layer
	fi
fi

if [ "$tempmonitor" ] # Function? Also, doesn't work yet. Need to look into that.
then
	difference=$(python -c "print $ttemp-$htemp" | tr -d .-)
	if [ "$difference" -ge 10 ]
	then
		echo "Temp warning!"
		#notify of pause
	fi
fi

if [ "$loud" = 1 ]
then
	echo $startdate $gstatus
fi

case $csv in
	yes)
		echo $cstatus >> $csvlog
		;;
	both)
		echo $cstatus >> $csvlog
		echo $startdate $gstatus >> $log
		;;
	no)
		echo $startdate $gstatus >> $log
		;;
esac

if [ "$debug" = 1 ]
then
	echo $allstats >> $log.debug
fi
