#!/bin/bash
###
#
# Called by printmonitor to execute tasks during a print - should only be called when a print is active
#
###

startdate=$1
duetdir=$(dirname "$(readlink -f "$0")")
source $duetdir/functions
ptemp=/tmp/$startdate.tmp
touch $ptemp
source $ptemp

writevars () {
	declare -p | grep duetm_ > $ptemp.$$
	mv $ptemp.$$ $ptemp
}

confcheck

debug=0
loud=0

allstats=$(statusparser)
gstatus=$(echo "$allstats" | egrep 'Printing')
cstatus=$(echo "$allstats" | grep CSV)
status=$(echo "$allstats" | grep RAW)
htemp=$(echo $cstatus | awk -F',' '{print $4}')
ttemp=$(echo $cstatus | awk -F',' '{print $5}')
layer=$(echo $cstatus | awk -F',' '{print $1}')
layer=${layer#CSV-}

startdate=$1							#This date is the printing_started time from printcontrol.
log=$logdir/print.$startdate.log

if [ "$csv" ]
	then
		csvlog=$logdir/$startdate.csv
		if [ ! -f "$csvlog" ]
		then
			echo "Layer,Bed Temp,Bed Target,Head Temp,Head Target,Percent" > $csvlog
		fi
fi

status=${status#RAW-}
cstatus=${cstatus#CSV-}

if [ "$debug" = 1 ]
then
	echo Head temp: $htemp
	echo Target temp: $ttemp
	echo Layer: $layer
	echo Status: $status
	echo CSV: $cstatus
fi

if [ ! "$duetm_loop" ]
then
	duetm_loop=1
	duetm_oldlayer=0
	writevars
else
	duetm_loop=$((duetm_loop+1))
	writevars
fi

if [ "$snapshot" = timed ]
then
	wget --quiet http://localhost/webcam/?action=snapshot -O $imgdir/$startdate-$duetm_loop.jpg
elif [ "$snapshot" = layer ]
then
	if [ "$debug" = 1 ]
	then
		echo "Per-layer snapshot:"
		echo Layer: $layer Old: $duetm_oldlayer
	fi
	if [ "$layer" != "$duetm_oldlayer" ]
	then
		#pause print
		printcontrol pause
		sleep 1
		wget --quiet http://localhost/webcam/?action=snapshot -O $imgdir/$startdate-$duetm_loop.jpg
#		echo "Layer Snap" > $imgdir/$startdate-$duetm_loop.jpg
		printcontrol resume
		#resume print
		duetm_oldlayer=$layer
		writevars
	fi
fi

debug=1

if [ "$tempmonitor" ] # Function? Also, doesn't work yet. Need to look into that.
then
	difference=$(python -c "print $ttemp-$htemp" | tr -d .-)
	if [ "$difference" -ge 10 ]
	then
		if [ "$debug" = 1 ]
		then
			echo target: $ttemp head: $htemp dif: $(python -c "print $difference/10") at $(date)
		fi
		echo "Temp warning!"
		#notify of pause
#		echo ${status#RAW-}
	fi
fi

if [ "$loud" = 1 ]
then
	echo $startdate $gstatus
fi

case $csv in
	yes)
		echo $cstatus >> $csvlog
		;;
	both)
		echo $cstatus >> $csvlog
		echo $(date +%m-%d-%y-%H:%M:%S) $gstatus >> $log
		;;
	no)
		echo $startdate $gstatus >> $log
		;;
esac

if [ "$debug" = 1 ]
then
	echo $allstats >> $log.debug
fi

writevars
